-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
grips = {
	up = CFrame.new(0, 0, -1.70000005, 0, 0, 1, 1, 0, 0, 0, 1, 0), 
	out = CFrame.new(0, 0, -1.70000005, 0, 1, 0, 1, -0, 0, 0, 0, -1)
};
for v2, v3 in pairs(script:GetChildren()) do
	local v4 = require(v3);
	if typeof(v4) == "table" then
		for v5, v6 in pairs(v4) do
			v1[v5] = v6;
		end;
	else
		v1[v3.Name] = v4;
	end;
end;
local l__RunService__1 = game:GetService("RunService");
return function(p1)
	if p1 then
		local l__Humanoid__7 = p1:FindFirstChild("Humanoid");
		local v8 = p1:FindFirstChildOfClass("Tool");
		if not v8 then
			while true do
				v8 = p1:FindFirstChildOfClass("Tool");
				wait();
				if v8 then
					break;
				end;			
			end;
		end;
		local l__Handle__9 = v8:FindFirstChild("Handle");
		local l__PrimaryPart__10 = p1.PrimaryPart;
		local v11 = 0;
		local v12 = 0;
		local v13 = 0;
		local v14 = false;
		while p1.PrimaryPart and l__Humanoid__7.Health > 0 and p1.Parent == workspace:WaitForChild("players") do
			v11 = v11 + l__RunService__1.RenderStepped:Wait();
			local v15 = v1.getClosestEnemy(p1);
			if v15 then
				local v16 = v15:FindFirstChildOfClass("Tool");
				if not v16 then
					while true do
						v16 = p1:FindFirstChildOfClass("Tool");
						wait();
						if v16 then
							break;
						end;					
					end;
				end;
				local l__Handle__17 = v16:WaitForChild("Handle");
				local v18 = v1.getClosestPart(l__Handle__9.Position, v15);
				local l__Humanoid__19 = v15:WaitForChild("Humanoid");
				local v20 = false;
				if v16 and v16.Grip == grips.out then
					if not v14 then
						v13 = v11;
					end;
					v14 = true;
				end;
				if v8.Grip ~= grips.out then
					v20 = true;
				end;
				local l__Position__21 = l__PrimaryPart__10.Position;
				local l__Position__22 = v15.PrimaryPart.Position;
				local v23 = math.sqrt((l__Position__21.X - l__Position__22.X) ^ 2 + (l__Position__21.Z - l__Position__22.Z) ^ 2);
				local v24 = v1.getDistance(p1, v15);
				local l__Position__25 = v15.PrimaryPart.Position;
				if v14 and v20 and math.abs(v15.PrimaryPart.Position.Y - p1.PrimaryPart.Position.Y) < 3 and v24 > 6 and v16 then
					local l__Position__26 = l__PrimaryPart__10.Position;
					local v27 = l__Handle__17.Position + v15.PrimaryPart.CFrame.lookVector * l__Handle__17.Size.Y * 2.2;
					p1:SetPrimaryPartCFrame(CFrame.lookAt(l__Position__26, v27 - Vector3.new(0, v27.Y - l__Position__26.Y, 0)) * CFrame.Angles(0, 0.30543261909900765, 0));
				else
					if v8.Parent ~= p1 then
						v8:WaitForChild("Equip"):FireServer();
					end;
					v8.Parent = p1;
					p1:SetPrimaryPartCFrame(CFrame.lookAt(l__PrimaryPart__10.Position, v18.Position - Vector3.new(0, v18.Position.Y - l__PrimaryPart__10.Position.Y, 0)) * CFrame.Angles(0, 0.30543261909900765, 0));
				end;
				if v14 then
					local v28 = 8;
				else
					v28 = 7;
				end;
				if ((l__PrimaryPart__10.Position - v15.PrimaryPart.Position).Unit - l__Humanoid__19.MoveDirection).Magnitude < 1 then
					local v29 = 2;
				else
					v29 = 0;
				end;
				local v30 = v28 + v29;
				if v8.Enabled and v8.Grip == grips.up then
					v12 = v11;
				end;
				if v16 and not v16.Enabled and v11 - v13 > 0.1 and not (v11 - v13 < 0.2) and v11 - v12 > 0.05 then
					v30 = v30 - 2;
				end;
				if v11 - v12 > 0.5 then
					v30 = v30 + 2;
				end;
				if v23 < 15 then
					v8:WaitForChild("Use"):FireServer();
				end;
				if v24 > 8 and l__Humanoid__7.Health < v15.Humanoid.Health then
					v30 = v30 + 2;
				end;
				local v31 = -v15.PrimaryPart.CFrame.rightVector;
				local v32 = -v15.PrimaryPart.CFrame.lookVector;
				if v1.sideCast(v15) or v8.Grip == grips.up then
					v32 = Vector3.new(0, 0, 0);
				end;
				local v33 = l__Position__25 - (l__Position__25 - l__PrimaryPart__10.Position).Unit * v30 * 1.25 + v32;
				local v34 = l__Position__25 - (l__Position__25 - l__PrimaryPart__10.Position).Unit * v30 * 1.25 + v32;
				local v35 = l__Position__25 - (l__Position__25 - l__PrimaryPart__10.Position).Unit * v30 + v32;
				if v15.Humanoid.Health < l__Humanoid__7.Health then
					v31 = v31 * 3;
				end;
				local v36 = l__Humanoid__19:GetPropertyChangedSignal("Jump");
				local u2 = nil;
				local u3 = l__Position__25 - (l__Position__25 - l__PrimaryPart__10.Position).Unit * v30 * 1.25 + v32;
				v36:Connect(function()
					u2 = math.random(1, 10);
					if u2 == 9 then
						coroutine.resume(coroutine.create(function()
							task.wait(0.25);
							l__Humanoid__7.Jump = true;
						end));
						coroutine.resume(coroutine.create(function()
							if 1 == 1 then
								l__Humanoid__7:MoveTo(u3 + v31);
								task.wait(0.5);
								return;
							end;
							if 1 == 2 then
								l__Humanoid__7:MoveTo(u3 - v31);
								task.wait(0.5);
							end;
						end));
					end;
				end);
				local v37 = math.random(1, 250);
				if v24 < v30 then
					coroutine.resume(coroutine.create(function()
						l__Humanoid__7:MoveTo(u3 + v15.PrimaryPart.CFrame.rightVector);
						wait(3);
						l__Humanoid__7:MoveTo(u3 - v15.PrimaryPart.CFrame.rightVector);
					end));
				else
					coroutine.resume(coroutine.create(function()
						l__Humanoid__7:MoveTo(u3 + v15.PrimaryPart.CFrame.rightVector);
						wait(3);
						l__Humanoid__7:MoveTo(u3 - v15.PrimaryPart.CFrame.rightVector);
					end));
				end;
			end;		
		end;
	else
		warn("MODEL IS NOT SET");
	end;
end;
